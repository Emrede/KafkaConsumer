## Root logger option
#log4j.rootLogger=INFO, stdout
#
## Direct log messages to stdout
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} | %-5p | [%t] %C{2} (%F:%L) | %m%n
#
## MongoDB appender classname
## To log with a PatternLayout, use MongoDbPatternLayoutAppender
#log4j.appender.MongoDB=MongoDbAppender
#
## MongoDB appender properties
##  All are optional - defaults shown below (except for userName and password, which default to undefined)
##  If using a replica set, set hostname to blank space-delimited list of host seeds. Don't include arbiters.
##      Also, set port to either one port that all hosts will use or space-delimited list of one port per hostname
#log4j.appender.MongoDB.hostname=localhost
#log4j.appender.MongoDB.port=27017
#log4j.appender.MongoDB.databaseName=TEBLogs
#log4j.appender.MongoDB.collectionName=logs
#log4j.appender.MongoDB.userName=root
#log4j.appender.MongoDB.password=

# The layout property is required only if the MongoDbPatternLayoutAppender appender is used.
#   If a custom PatternParser and custom PatternConverters are required to log additional data,
#   the specified layout class must extend MongoDbPatternLayout. A ConversionPattern property
#   should also be specified.
#log4j.appender.MongoDB.layout=MongoDbPatternLayout

# The ConversionPattern property is required only if MongoDbPatternLayoutAppender is used.
#   The pattern must be a valid JSON document. The value will typically contain one or more
#   converter characters that are replaced when a message is logged. A key cannot begin with $,
#   contain a . or be equal to _id due to BSON naming restrictions. The JSON document can have
#   sub-documents. Values can be strings or arrays.
#log4j.appender.MongoDB.layout.ConversionPattern={"timestamp":"%d{yyyy-MM-dd'T'HH:mm:ss'Z'}","level":"%p","class":"%c{1}","message":"%m"}

# Add optional root level elements to each log event
#log4j.appender.MongoDB.rootLevelProperties=applicationName=MyProject&eventType=Development

###

# Root logger option
log4j.rootLogger=INFO, stdout

# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n